syntax = "proto3";
package ocp.verdict.api;

import "google/api/annotations.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

option go_package = "github.com/ozoncp/ocp-solution-api/pkg/ocp-verdict-api;ocp_verdict_api";

service OcpVerdictApi {
  rpc MultiCreateVerdictV1(MultiCreateVerdictV1Request) returns (MultiCreateVerdictV1Response) {
    option (google.api.http) = {
      post: "/v1/verdicts"
    };
  }

  rpc CreateVerdictV1(CreateVerdictV1Request) returns (CreateVerdictV1Response) {
    option (google.api.http) = {
      post: "/v1/verdicts"
    };
  }

  rpc ListVerdictsV1(ListVerdictsV1Request) returns (ListVerdictsV1Response) {
    option (google.api.http) = {
      get: "/v1/verdicts"
    };
  }

  rpc UpdateVerdictV1(UpdateVerdictV1Request) returns (UpdateVerdictV1Response) {
    option (google.api.http) = {
      get: "/v1/verdicts/{solution_id}"
    };
  }

  rpc RemoveVerdictV1(RemoveVerdictV1Request) returns (RemoveVerdictV1Response) {
    option (google.api.http) = {
      delete: "/v1/verdicts/{solution_id}"
    };
  }
}

message MultiCreateVerdictV1Request {
  repeated uint64 solution_ids = 1 [(validate.rules).repeated.items.uint64.gt = 0];
}

message MultiCreateVerdictV1Response {
  repeated Verdict verdicts = 1;
}

message CreateVerdictV1Request {
  uint64 solution_id = 1 [(validate.rules).uint64.gt = 0];
}

message CreateVerdictV1Response {
  Verdict verdict = 1;
}

message ListVerdictsV1Request {
  uint64 limit = 1;
  uint64 offset = 2;
}

message ListVerdictsV1Response {
  repeated Verdict verdicts = 1;
}

message UpdateVerdictV1Request {
  uint64 solution_id = 1 [(validate.rules).uint64.gt = 0];
  uint64 user_id = 2;
  Verdict.Status status = 3;
  string comment = 4;
}

message UpdateVerdictV1Response {
  bool success = 1;
}

message RemoveVerdictV1Request {
  uint64 solution_id = 1 [(validate.rules).uint64.gt = 0];
}

message RemoveVerdictV1Response {
  bool success = 1;
}

message Verdict {
  uint64 solution_id = 1 [(validate.rules).uint64.gt = 0];
  uint64 user_id = 2 [(validate.rules).uint64.gt = 0];

  enum Status {
    InProgress = 0;
    Passed = 1;
    Failed = 2;
    SyntaxError = 3;
    CompilationError = 4;
    Dropped = 5;
  }

  Status status = 3;
  int64 timestamp = 4;
  string comment = 5;
}
